
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}


model User {
  id          Int          @id @default(autoincrement())
  name        String
  email       String       @unique
  password    String
  role        String       @default("user")
  status      String       @default("active")
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  resetTokens ResetToken[]

  companyName       String?
  address           String?
  phone             String?
  registrationNumber String?

}

model Category {
  id      Int      @id @default(autoincrement())
  name    String   @unique
  clients Client[]
}

model Client {
  id                 Int              @id @default(autoincrement())
  companyName        String
  address            String
  contactName        String
  contactEmail       String           @unique
  contactPhone       String
  registrationNumber String           @unique
  categoryId         Int?
  category           Category?        @relation(fields: [categoryId], references: [id])
  tags               TagsOnClients[]
  createdAt          DateTime         @default(now())
  updatedAt          DateTime         @updatedAt
  orders             Order[]
  status             String?   // 例としてString型を使用            
}

model Tag {
  id             Int              @id @default(autoincrement())
  name           String           @unique
  clients  TagsOnClients[]
}

model TagsOnClients {
  clientId Int
  tagId    Int
  client   Client @relation(fields: [clientId], references: [id], onDelete: Restrict)
  tag      Tag    @relation(fields: [tagId], references: [id], onDelete: Restrict)

  @@id([clientId, tagId])
}

model ResetToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  userId    Int
  expires   DateTime
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
}

model Order {
  id          Int       @id @default(autoincrement())
  clientId    Int
  totalAmount Float
  status      String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  invoices    Invoice[]
  client      Client    @relation(fields: [clientId], references: [id])
}

model Invoice {
  id         Int      @id @default(autoincrement())
  orderId    Int
  amount     Float
  issuedDate DateTime
  dueDate    DateTime
  status     String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  order      Order    @relation(fields: [orderId], references: [id])
}
